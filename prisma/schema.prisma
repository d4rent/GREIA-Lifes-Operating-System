// Previous schema content remains the same

model Portfolio {
  id          String      @id @default(cuid())
  userId      String      @unique
  title       String?
  description String?
  specialties String[]    // Array of specialties/skills
  experience  Int?        // Years of experience
  
  // Portfolio items/projects
  projects    Project[]
  
  // Social media and website links
  website     String?
  instagram   String?
  linkedin    String?
  facebook    String?
  
  // Reviews and ratings
  reviews     Review[]
  avgRating   Float?      // Calculated average rating
  
  // Relations
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Project {
  id          String      @id @default(cuid())
  portfolioId String
  title       String
  description String?
  category    String      // e.g., Painting, Carpentry, Plumbing, etc.
  images      String[]    // Array of image URLs
  videos      String[]    // Array of video URLs
  
  // Project details
  client      String?     // Client name (if shareable)
  location    String?     // Project location
  completedAt DateTime?   // Project completion date
  duration    String?     // Project duration
  
  // Custom fields for different types of work
  materials   Json?       // Materials used
  techniques  String[]    // Techniques/methods used
  dimensions  String?     // For artwork/construction
  
  // Before/After images
  beforeImages String[]
  afterImages  String[]
  
  // Relations
  portfolio   Portfolio   @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Review {
  id          String      @id @default(cuid())
  portfolioId String
  reviewerId  String
  rating      Float       // 1-5 rating
  comment     String?
  images      String[]    // Optional images of the work
  verified    Boolean     @default(false) // If this was a verified project
  
  // Relations
  portfolio   Portfolio   @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  reviewer    User        @relation(fields: [reviewerId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

// Update User model
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Professional verification
  verificationStatus VerificationStatus @default(UNVERIFIED)
  professionalInfo   ProfessionalInfo?
  portfolio         Portfolio?
  givenReviews      Review[]

  // Relations
  accounts      Account[]
  sessions      Session[]
  listings      Listing[]     @relation("ListingOwner")
  inquiries     Inquiry[]     @relation("InquiryCreator")
  receivedInquiries Inquiry[] @relation("InquiryReceiver")
  transactions  Transaction[] @relation("TransactionUser")
  messages      Message[]     @relation("MessageSender")
  receivedMessages Message[]  @relation("MessageReceiver")
  notes         Note[]        @relation("NoteCreator")
}