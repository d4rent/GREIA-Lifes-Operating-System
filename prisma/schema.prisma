// Previous schema content remains the same

model ChatRoom {
  id          String      @id @default(cuid())
  type        ChatType    @default(DIRECT) // DIRECT, GROUP
  name        String?     // For group chats
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  // Participants
  participants UserChatRoom[]
  messages     ChatMessage[]
  
  // Last message for preview
  lastMessageId String?
  lastMessage   ChatMessage? @relation("LastMessage", fields: [lastMessageId], references: [id])
}

model UserChatRoom {
  id          String    @id @default(cuid())
  userId      String
  chatRoomId  String
  joinedAt    DateTime  @default(now())
  isAdmin     Boolean   @default(false) // For group chats
  
  // Unread messages count
  unreadCount Int       @default(0)
  lastReadAt  DateTime?
  
  // Relations
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  chatRoom    ChatRoom  @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)

  @@unique([userId, chatRoomId])
}

model ChatMessage {
  id          String    @id @default(cuid())
  chatRoomId  String
  senderId    String
  content     String
  type        MessageType @default(TEXT)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // For file/image messages
  fileUrl     String?
  fileName    String?
  fileType    String?
  
  // Message status
  isRead      Boolean   @default(false)
  readAt      DateTime?
  
  // Relations
  chatRoom    ChatRoom  @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)
  sender      User      @relation(fields: [senderId], references: [id], onDelete: Cascade)
  
  // Last message relation
  lastMessageInRoom ChatRoom[] @relation("LastMessage")
}

enum ChatType {
  DIRECT
  GROUP
}

enum MessageType {
  TEXT
  IMAGE
  FILE
  SYSTEM
}

// Update User model
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Professional verification
  verificationStatus VerificationStatus @default(UNVERIFIED)
  professionalInfo   ProfessionalInfo?
  portfolio         Portfolio?
  givenReviews      Review[]

  // Chat relations
  chatRooms     UserChatRoom[]
  chatMessages  ChatMessage[]

  // Relations
  accounts      Account[]
  sessions      Session[]
  listings      Listing[]     @relation("ListingOwner")
  inquiries     Inquiry[]     @relation("InquiryCreator")
  receivedInquiries Inquiry[] @relation("InquiryReceiver")
  transactions  Transaction[] @relation("TransactionUser")
  messages      Message[]     @relation("MessageSender")
  receivedMessages Message[]  @relation("MessageReceiver")
  notes         Note[]        @relation("NoteCreator")
}